<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mybatis中的映射文件:内部要定义sql映射 -->
<mapper namespace="com.pt.member.dao.MemberDao">
    <!-- 本命名空间使用二级缓存 -->
    <cache eviction="FIFO" readOnly="true"/>
    <!-- 查询会员信息：对于select元素而言，
                  必须指定resultType-->
    <select id="findPageObjects" 
           resultType="com.pt.member.entity.Member"
           >
       select * 
       from t_members
       limit #{startIndex},#{pageSize}
    </select>
    
    <!-- 底层会封装为一个MappedStatement对象 -->
    <!-- 基于id删除会员信息 -->
    <delete id="deleteObject"
            parameterType="int">
         delete from t_members
         where id=#{id}        
    </delete>
   
    <!-- 更新密码 -->
    <update id="updatePassword">
        update t_members
        set password=#{array[0]}
        where id=#{array[1]}
    </update>
   
   <!-- 定义insert元素，其中parameterType可以不写，
        #{}表达式会调用参数对象的get方法 -->
   <insert id="insertObject"
           parameterType="com.pt.member.entity.Member">
         insert into t_members
         (nickname,password,realname,gender,rank,
          email,mobile,safequestion,safeanswer,createdTime)
         values   
         (#{nickname},#{password},#{realname},#{gender},#{rank},
         #{email},#{mobile},#{safequestion},#{safeanswer},#{createdTime})
   </insert>
   
   
   <!-- 通过select元素定义查询语句 ,每一个映射
      元素底层都会封装为一个MappedStatement对象-->
   <select id="findObjects" 
           resultType="com.pt.member.entity.Member"
           useCache="true">
        select * 
        from t_members
   </select>

</mapper>
