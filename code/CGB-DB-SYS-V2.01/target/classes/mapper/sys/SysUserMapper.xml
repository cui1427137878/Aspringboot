<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.sys.dao.SysUserDao">

   <!-- 基于用户名查询用户信息 -->
   <select id="findUserByUserName"
           resultType="com.db.sys.entity.SysUser">
         select *
         from sys_users
         where username=#{username}
   </select>

   <!-- 更新用户自身信息 -->
   <update id="updateObject" 
           parameterType="com.db.sys.entity.SysUser">
          update sys_users
          <set>
             <if test="username!=null and username!=''">
               username=#{username},
             </if>
             <if test="email!=null and email!=''">
                  email=#{email},
             </if>
             <if test="mobile!=null and mobile!=''">
                mobile=#{mobile},
             </if>
             <if test="deptId!=null and deptId!=''">
                deptId=#{deptId},
             </if>

             <if test="modifiedUser!=null and modifiedUser!=''">
                modifiedUser=#{modifiedUser},
             </if>
             modifiedTime=now()
          </set>
          where id=#{id}      
   </update>


   <insert id="insertObject"
           parameterType="com.db.sys.entity.SysUser">
      <!-- 
        selectKey这个元素一般用于获取一个主键值，
                其中：
        1)order表示selectKey中的sql语句何时执行
        2)keyProperty表示selectKey执行结果赋值
                给参数对象中的哪个数据(一般与set方法匹配)
        3)last_insert_id()为mysql内置的一个函数
                其作用是获取最后一个自增长的那个id值        
       -->
      <selectKey keyProperty="id"
                 order="AFTER"
                 resultType="int">
            select last_insert_id()
      </selectKey>    
      insert into sys_users
       (username,password,deptId,email,mobile,salt,valid,
       createdTime,modifiedTime,createdUser,modifiedUser)
      values
       (#{username},#{password},#{deptId},#{email},#{mobile},#{salt},#{valid},
       now(),now(),#{createdUser},#{modifiedUser})
   </insert>
  
   
   <!-- 禁用，启用用户状态信息 -->
   <update id="validById">
       update sys_users
       set valid=#{valid},
           modifiedUser=#{modifiedUser},
           modifiedTime=now()
       where id=#{id}
   </update>
   
 
   <sql id="queryWhereId">
      <where>
        <if test="username!=null and username!=''">
        username like concat("%",#{username},"%")
        </if>
       
      </where>
   </sql>
  
   <select id="getRowCount" resultType="int">
        select count(*)
        from sys_users
        <include refid="queryWhereId"/>
   </select>
   
   <!-- 基于用户id查询用户以及用户对应的部门信息 -->
   <select id="findObjectById"
           resultMap="sysUserDeptVo">
        select *
        from sys_users
        where id=#{id}   
   </select>
   
   <resultMap type="com.db.sys.vo.SysUserDeptVo" 
              id="sysUserDeptVo">
            <!-- 
            1)association 用于定义关联查询
            2)association 应用场景:many2one or one2one-->
            <association property="sysDept"
                         column="deptId"
                         select="com.db.sys.dao.SysDeptDao.findById">
            </association> 
   </resultMap>
   
   <select id="findPageObjects"
           resultMap="sysUserDeptVo">
         select *
         from sys_users
         <include refid="queryWhereId"/>
         order by createdTime desc
         limit #{startIndex},#{pageSize}
   </select>

</mapper>
